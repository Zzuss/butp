# 原生部署Nginx配置文件
# /etc/nginx/sites-available/prediction-api

server {
    listen 80;
    server_name _;  # 替换为你的域名，如: your-domain.com
    
    # 请求大小限制
    client_max_body_size 50M;
    
    # 超时设置
    proxy_connect_timeout 300s;
    proxy_send_timeout 300s;
    proxy_read_timeout 300s;
    
    # 日志配置
    access_log /var/log/nginx/prediction-api-access.log;
    error_log /var/log/nginx/prediction-api-error.log;
    
    # 健康检查端点
    location /health {
        proxy_pass http://127.0.0.1:8000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # 缓存健康检查
        proxy_cache_valid 200 5s;
        access_log off;
    }
    
    # API路由
    location /api/ {
        # CORS处理
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization';
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain; charset=utf-8';
            add_header 'Content-Length' 0;
            return 204;
        }
        
        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization' always;
        
        proxy_pass http://127.0.0.1:8000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        
        # 缓冲设置
        proxy_buffering on;
        proxy_buffer_size 4k;
        proxy_buffers 8 4k;
    }
    
    # 根路径重定向到健康检查
    location = / {
        return 302 /health;
    }
    
    # 默认路由（API使用说明）
    location / {
        return 200 '{"message":"Prediction API Service","version":"1.0.0","deployment":"native","endpoints":["/health","/api/majors","/api/predict","/api/predict/batch"]}';
        add_header Content-Type application/json;
    }
    
    # 错误页面
    error_page 404 /404.html;
    error_page 500 502 503 504 /50x.html;
    
    location = /404.html {
        return 404 '{"error":"Not Found","code":"NOT_FOUND"}';
        add_header Content-Type application/json;
    }
    
    location = /50x.html {
        return 500 '{"error":"Internal Server Error","code":"SERVER_ERROR"}';
        add_header Content-Type application/json;
    }
}

# HTTPS配置（如果有SSL证书）
# server {
#     listen 443 ssl http2;
#     server_name your-domain.com;
#     
#     # SSL证书配置
#     ssl_certificate /etc/ssl/certs/your-cert.pem;
#     ssl_certificate_key /etc/ssl/private/your-key.pem;
#     
#     # SSL安全配置
#     ssl_protocols TLSv1.2 TLSv1.3;
#     ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
#     ssl_prefer_server_ciphers off;
#     ssl_session_cache shared:SSL:10m;
#     ssl_session_timeout 10m;
#     
#     # HSTS
#     add_header Strict-Transport-Security "max-age=63072000" always;
#     
#     # 其余配置与HTTP相同...
# }
